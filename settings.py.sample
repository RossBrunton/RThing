"""
Django settings.

For more information on this file, see
https://docs.djangoproject.com/en/1.6/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.6/ref/settings/
"""

import os
import sys

# Get base dir, you don't need to change this
BASE_DIR = os.path.dirname(__file__)

#####
#####
# Change the following
#####
#####

# Generate using http://www.miniwebtool.com/django-secret-key-generator/
SECRET_KEY = ''

# Turn on if you want to debug something!
DEBUG = False

# A list of the allowed hosts this can run on
ALLOWED_HOSTS = []

# Set this to true if tests should use a sqlite database file rather than connecting to the server
TEST_SQLITE = True

# Email domain; when you create a new user their email will be set to "username@EMAIL_DOMAIN"
EMAIL_DOMAIN = "localhost"

# Languages and their packages
IFACES = {
    "dummy":("Dummy Interface", "ifaces.dummy.dummy"),
    "r":("R", "ifaces.r.r"),
}

# Set your web server to serve the files in STATIC_ROOT from STATIC_URL
STATIC_ROOT = os.path.join(BASE_DIR, 'collectedstatic')
STATIC_URL = '/static/'

# What files/dirs R needs to see (use ldd)
# Copy these files
R_FILES = [
    '/usr/bin/R', '/usr/bin/Rscript', '/usr/bin/less', '/bin/sh', '/bin/bash', '/bin/uname', '/bin/sed', '/bin/rm',
    '/bin/cat'
]
# Files that are bound in the chroot. What is required here varies wildly; try /lib and /etc if you get file not found
# All files in these folders will be visible from the system (using ls, for example), and they may be able to delete
# them if for some reason they are world writable or the sandbox user can write them
R_BOUND = [
    '/usr/lib64/R', '/usr/lib64/', '/lib64'
]
R_LDD = []#['/usr/lib64/R/bin/exec/R', '/bin/sed', '/bin/ls', '/usr/lib64/R/library/stats/libs/stats.so']

#####
#####
# You probably don't want to change anything below this line
#####
#####

TEMPLATE_DEBUG = DEBUG

# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ordered_model',
    'rthing',
    'courses',
    'tasks',
    'stats',
    'staff',
    'users',
    'ifaces',
    'export'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'rthing.urls'
WSGI_APPLICATION = 'wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.6/ref/settings/#databases
if "test" in sys.argv and TEST_SQLITE:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'testingdb.sqlite',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'OPTIONS': {'read_default_file':os.path.join(BASE_DIR, 'db.cnf')},
        }
    }


# Caches
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
        'TIMEOUT':60*60, # An hour
    }
}

# Internationalization (not in use)
# https://docs.djangoproject.com/en/1.6/topics/i18n/
LANGUAGE_CODE = 'en-gb'
TIME_ZONE = 'UTC'
USE_I18N = False
USE_L10N = False
USE_TZ = False

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]
TEMPLATE_DIRS = [
    os.path.join(BASE_DIR, "templates")
]

LOGIN_URL = "users:login"
LOGOUT_URL = "users:logout"

NAMESPACE_DIR = os.path.join(BASE_DIR, "namespaces")
SANDBOX_DIR = os.path.join(BASE_DIR, "sandboxes")
MOUNT_DIR = os.path.join(BASE_DIR, "mnt")
